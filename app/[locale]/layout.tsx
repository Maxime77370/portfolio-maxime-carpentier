import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { cookies } from "next/headers"; // ðŸ”¥ Solution clÃ© !
import "./../globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const LOCALES = ["en", "fr", "es"]; // ðŸ”¹ Ajoute ici les locales supportÃ©es

type RootLayoutProps = {
  children: React.ReactNode;
  params: { locale?: string };
};

export default async function RootLayout({ children, params }: RootLayoutProps) {
  const locale = cookies().get("NEXT_LOCALE")?.value; // ðŸ”¥ RÃ©cupÃ©rer locale via cookies

  if (!locale || !LOCALES.includes(locale)) {
    return notFound();
  }

  let messages;
  try {
    messages = (await import(`../../messages/${locale}.json`)).default;
  } catch {
    return notFound();
  }

  return (
    <html lang={locale}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
